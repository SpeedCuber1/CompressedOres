package com.tylerh.compressedores.Init;import com.tylerh.compressedores.Blocks.*;import com.tylerh.compressedores.Items.*;import com.tylerh.compressedores.Util.EnumLevel;import com.tylerh.compressedores.Util.LogHelper;import com.tylerh.compressedores.Util.ModInfo;import net.minecraft.block.Block;import net.minecraft.block.material.Material;import net.minecraft.client.Minecraft;import net.minecraft.client.renderer.block.model.ModelBakery;import net.minecraft.client.renderer.block.model.ModelResourceLocation;import net.minecraft.item.Item;import net.minecraft.item.ItemBlock;import net.minecraft.item.ItemStack;import net.minecraft.util.ResourceLocation;import net.minecraftforge.fml.common.registry.GameRegistry;import net.minecraftforge.oredict.OreDictionary;public class ModBlocks{    public static boolean registerGold;    public static boolean registerIron;    public static boolean registerDiamond;    public static boolean registerEmerald;    public static boolean registerRedstone;    public static boolean registerLapis;    public static boolean registerQuartz;    public static boolean registerCoal;    public static boolean registerAndesite;    public static boolean registerDiorite;    public static boolean registerGranite;    public static boolean registerCobblestone;    //Blocks    public static Block blockMetaGold;    public static Block blockMetaIron;    public static Block blockMetaDiamond;    public static Block blockMetaEmerald;    public static Block blockMetaRedstone;    public static Block blockMetaLapis;    public static Block blockMetaCoal;    public static Block blockMetaAndesite;    public static Block blockMetaDiorite;    public static Block blockMetaGranite;    public static Block blockMetaCobble;    public static Block blockMetaQuartz;    //ItemBlocks    public static ItemBlock itemBlockMetaGold;    public static void preInitCommon()    {        if(registerGold)        {            blockMetaGold = new BlockMetaCompressedOre(Material.IRON,3.0f,5.0f,"blockMetaGold",false);            itemBlockMetaGold = new ItemBlockMetaCompressedOre(blockMetaGold);            createRegistry(blockMetaGold,itemBlockMetaGold,"blockMetaGold");            GameRegistry.register(blockMetaGold);            GameRegistry.register(itemBlockMetaGold);            initOreDict(blockMetaGold,"blockGold");        }        if(registerIron)        {            blockMetaIron = new BlockMetaCompressedOre(Material.IRON,3.0f,5.0f,"blockMetaIron",false);            GameRegistry.registerBlock(blockMetaIron,ItemBlockMetaCompressedOre.class,"blockMetaIron");            initOreDict(blockMetaIron,"blockIron");        }        if(registerDiamond)        {            blockMetaDiamond = new BlockMetaCompressedOre(Material.IRON,3.0f,5.0f,"blockMetaDiamond",false);            GameRegistry.registerBlock(blockMetaDiamond,ItemBlockMetaCompressedOre.class,"blockMetaDiamond");            initOreDict(blockMetaDiamond,"blockDiamond");        }        if(registerEmerald)        {            blockMetaEmerald = new BlockMetaCompressedOre(Material.IRON,3.0f,5.0f,"blockMetaEmerald",false);            GameRegistry.registerBlock(blockMetaEmerald,ItemBlockMetaCompressedOre.class,"blockMetaEmerald");            initOreDict(blockMetaEmerald,"blockEmerald");        }        if(registerRedstone)        {            blockMetaRedstone = new BlockMetaCompressedOre(Material.IRON,3.0f,5.0f,"blockMetaRedstone",true);            GameRegistry.registerBlock(blockMetaRedstone,ItemBlockMetaCompressedOre.class,"blockMetaRedstone");            initOreDict(blockMetaRedstone,"blockRedstone");        }        if(registerLapis)        {            blockMetaLapis = new BlockMetaCompressedOre(Material.IRON,3.0f,5.0f,"blockMetaLapis",false);            GameRegistry.registerBlock(blockMetaLapis,ItemBlockMetaCompressedOre.class,"blockMetaLapis");            initOreDict(blockMetaLapis,"blockLapis");        }        if(registerCoal)        {            blockMetaCoal = new BlockMetaCompressedOre(Material.ROCK,3.0f,5.0f,"blockMetaCoal",false);            GameRegistry.registerBlock(blockMetaCoal,ItemBlockMetaCompressedOre.class,"blockMetaCoal");            initOreDict(blockMetaCoal,"blockCoal");        }        if(registerAndesite)        {            blockMetaAndesite = new BlockMetaCompressedOre(Material.ROCK,3.0f,5.0f,"blockMetaAndesite",false);            GameRegistry.registerBlock(blockMetaAndesite,ItemBlockMetaCompressedOre.class,"blockMetaAndesite");            initOreDict(blockMetaAndesite,"blockAndesite");        }        if(registerDiorite)        {            blockMetaDiorite = new BlockMetaCompressedOre(Material.ROCK,3.0f,5.0f,"blockMetaDiorite",false);            GameRegistry.registerBlock(blockMetaDiorite,ItemBlockMetaCompressedOre.class,"blockMetaDiorite");            initOreDict(blockMetaDiorite,"blockDiorite");        }        if(registerGranite)        {            blockMetaGranite = new BlockMetaCompressedOre(Material.ROCK,3.0f,5.0f,"blockMetaGranite",false);            GameRegistry.registerBlock(blockMetaGranite,ItemBlockMetaCompressedOre.class,"blockMetaGranite");            initOreDict(blockMetaGranite,"blockGranite");        }        if(registerCobblestone)        {            blockMetaCobble = new BlockMetaCompressedOre(Material.ROCK,3.0f,5.0f,"blockMetaCobble",false);            GameRegistry.registerBlock(blockMetaCobble,ItemBlockMetaCompressedOre.class,"blockMetaCobble");            initOreDict(blockMetaCobble,"blockCobble");        }        if(registerQuartz)        {            blockMetaQuartz = new BlockMetaCompressedOre(Material.ROCK,3.0f,5.0f,"blockMetaQuartz",false);            GameRegistry.registerBlock(blockMetaQuartz,ItemBlockMetaCompressedOre.class,"blockMetaQuartz");            initOreDict(blockMetaQuartz,"blockQuartz");        }    }    public static void preInitClient()    {        if(registerGold)        {            ResourceLocation location = new ResourceLocation("compressedores:blockMetaGold");            Item itemBlockMetaGold = Item.REGISTRY.getObject(location);            assembleModels(itemBlockMetaGold,location.toString(),"Assemble");        }        if(registerIron)        {            ResourceLocation location = new ResourceLocation("compressedores:blockMetaIron");            Item itemBlockMetaIron = GameRegistry.findItem("compressedores","blockMetaIron");            assembleModels(itemBlockMetaIron,location.toString(),"Assemble");        }        if(registerDiamond)        {            ResourceLocation location = new ResourceLocation("compressedores:blockMetaDiamond");            Item itemBlockMetaDiamond = GameRegistry.findItem("compressedores","blockMetaDiamond");            assembleModels(itemBlockMetaDiamond,location.toString(),"Assemble");        }        if(registerEmerald)        {            ResourceLocation location = new ResourceLocation("compressedores:blockMetaEmerald");            Item itemBlockMetaEmerald = GameRegistry.findItem("compressedores","blockMetaEmerald");            assembleModels(itemBlockMetaEmerald,location.toString(),"Assemble");        }        if(registerRedstone)        {            ResourceLocation location = new ResourceLocation("compressedores:blockMetaRedstone");            Item itemBlockMetaRedstone = GameRegistry.findItem("compressedores","blockMetaRedstone");            assembleModels(itemBlockMetaRedstone,location.toString(),"Assemble");        }        if(registerLapis)        {            ResourceLocation location = new ResourceLocation("compressedores:blockMetaLapis");            Item itemBlockMetaLapis = GameRegistry.findItem("compressedores","blockMetaLapis");            assembleModels(itemBlockMetaLapis,location.toString(),"Assemble");        }        if(registerCoal)        {            ResourceLocation location = new ResourceLocation("compressedores:blockMetaCoal");            Item itemBlockMetaCoal = GameRegistry.findItem("compressedores","blockMetaCoal");            assembleModels(itemBlockMetaCoal,location.toString(),"Assemble");        }        if(registerAndesite)        {            ResourceLocation location = new ResourceLocation("compressedores:blockMetaAndesite");            Item itemBlockMetaAndesite = GameRegistry.findItem("compressedores","blockMetaAndesite");            assembleModels(itemBlockMetaAndesite,location.toString(),"Assemble");        }        if(registerDiorite)        {            ResourceLocation location = new ResourceLocation("compressedores:blockMetaDiorite");            Item itemBlockMetaDiorite = GameRegistry.findItem("compressedores","blockMetaDiorite");            assembleModels(itemBlockMetaDiorite,location.toString(),"Assemble");        }        if(registerGranite)        {            ResourceLocation location = new ResourceLocation("compressedores:blockMetaGranite");            Item itemBlockMetaGranite = GameRegistry.findItem("compressedores","blockMetaGranite");            assembleModels(itemBlockMetaGranite,location.toString(),"Assemble");        }        if(registerCobblestone)        {            ResourceLocation location = new ResourceLocation("compressedores:blockMetaCobble");            Item itemBlockMetaCobble = GameRegistry.findItem("compressedores","blockMetaCobble");            assembleModels(itemBlockMetaCobble,location.toString(),"Assemble");        }        if(registerQuartz)        {            ResourceLocation location = new ResourceLocation("compressedores:blockMetaQuartz");            Item itemBlockMetaQuartz = GameRegistry.findItem("compressedores","blockMetaQuartz");            assembleModels(itemBlockMetaQuartz, location.toString(),"Assemble");        }    }    public static void initClient()    {        if(registerGold)        {            ResourceLocation location = new ResourceLocation("compressedores:blockMetaGold");            Item itemBlockMetaGold = GameRegistry.findItem("compressedores","blockMetaGold");            assembleModels(itemBlockMetaGold,location.toString(),"Bake");        }        if(registerIron)        {            ResourceLocation location = new ResourceLocation("compressedores:blockMetaIron");            Item itemBlockMetaIron = GameRegistry.findItem("compressedores","blockMetaIron");            assembleModels(itemBlockMetaIron,location.toString(),"Bake");        }        if(registerDiamond)        {            ResourceLocation location = new ResourceLocation("compressedores:blockMetaDiamond");            Item itemBlockMetaDiamond = GameRegistry.findItem("compressedores","blockMetaDiamond");            assembleModels(itemBlockMetaDiamond,location.toString(),"Bake");        }        if(registerEmerald)        {            ResourceLocation location = new ResourceLocation("compressedores:blockMetaEmerald");            Item itemBlockMetaEmerald = GameRegistry.findItem("compressedores","blockMetaEmerald");            assembleModels(itemBlockMetaEmerald,location.toString(),"Bake");        }        if(registerRedstone)        {            ResourceLocation location = new ResourceLocation("compressedores:blockMetaRedstone");            Item itemBlockMetaRedstone = GameRegistry.findItem("compressedores","blockMetaRedstone");            assembleModels(itemBlockMetaRedstone,location.toString(),"Bake");        }        if(registerLapis)        {            ResourceLocation location = new ResourceLocation("compressedores:blockMetaLapis");            Item itemBlockMetaLapis = GameRegistry.findItem("compressedores","blockMetaLapis");            assembleModels(itemBlockMetaLapis,location.toString(),"Bake");        }        if(registerCoal)        {            ResourceLocation location = new ResourceLocation("compressedores:blockMetaCoal");            Item itemBlockMetaCoal = GameRegistry.findItem("compressedores","blockMetaCoal");            assembleModels(itemBlockMetaCoal,location.toString(),"Bake");        }        if(registerAndesite)        {            ResourceLocation location = new ResourceLocation("compressedores:blockMetaAndesite");            Item itemBlockMetaAndesite = GameRegistry.findItem("compressedores","blockMetaAndesite");            assembleModels(itemBlockMetaAndesite,location.toString(),"Bake");        }        if(registerDiorite)        {            ResourceLocation location = new ResourceLocation("compressedores:blockMetaDiorite");            Item itemBlockMetaDiorite = GameRegistry.findItem("compressedores","blockMetaDiorite");            assembleModels(itemBlockMetaDiorite,location.toString(),"Bake");        }        if(registerGranite)        {            ResourceLocation location = new ResourceLocation("compressedores:blockMetaGranite");            Item itemBlockMetaGranite = GameRegistry.findItem("compressedores","blockMetaGranite");            assembleModels(itemBlockMetaGranite,location.toString(),"Bake");        }        if(registerCobblestone)        {            ResourceLocation location = new ResourceLocation("compressedores:blockMetaCobble");            Item itemBlockMetaCobble = GameRegistry.findItem("compressedores","blockMetaCobble");            assembleModels(itemBlockMetaCobble,location.toString(),"Bake");        }        if(registerQuartz)        {            ResourceLocation location = new ResourceLocation("compressedores:blockMetaQuartz");            Item itemBlockMetaQuartz = GameRegistry.findItem("compressedores","blockMetaQuartz");            assembleModels(itemBlockMetaQuartz,location.toString(),"Bake");        }    }    public static void initOreDict(Block blockIn, String name)    {        for(int i = 0; i < 8; i++)        {            ItemStack stack = new ItemStack(blockIn,1,i);            OreDictionary.registerOre(name + EnumLevel.byMetadata(i).getUnlocalizedName(),stack);        }    }    public static void assembleModels(Item item , String resource, String mode)    {        ModelResourceLocation location;        for(int i = 0; i < 8; i++)        {            location = new ModelResourceLocation(resource + "." + EnumLevel.byMetadata(i).getUnlocalizedName(), "inventory");            if(mode == "Assemble")            {                ModelBakery.registerItemVariants(item, location);            }            else if(mode == "Bake")            {                Minecraft.getMinecraft().getRenderItem().getItemModelMesher().register(item,i,location);            }        }    }    public static void createRegistry(Block block, ItemBlock itemBlock, String name)    {        block.setRegistryName("compressedores",name);        createRegistry(itemBlock,block.getRegistryName().toString());    }    public static void createRegistry(ItemBlock itemBlock, String name)    {        itemBlock.setRegistryName(name);    }}