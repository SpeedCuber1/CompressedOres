package com.tylerh.compressedores.Init;import com.tylerh.compressedores.Blocks.*;import com.tylerh.compressedores.Items.*;import com.tylerh.compressedores.Util.EnumLevel;import com.tylerh.compressedores.Util.ModInfo;import net.minecraft.block.Block;import net.minecraft.client.Minecraft;import net.minecraft.client.renderer.block.model.ModelBakery;import net.minecraft.client.renderer.block.model.ModelResourceLocation;import net.minecraft.item.Item;import net.minecraft.item.ItemBlock;import net.minecraft.item.ItemStack;import net.minecraft.util.ResourceLocation;import net.minecraftforge.fml.common.registry.GameRegistry;import net.minecraftforge.oredict.OreDictionary;public class ModBlocks{    public static boolean registerGold;    public static boolean registerIron;    public static boolean registerDiamond;    public static boolean registerEmerald;    public static boolean registerRedstone;    public static boolean registerLapis;    public static boolean registerQuartz;    public static boolean registerCoal;    public static boolean registerAndesite;    public static boolean registerDiorite;    public static boolean registerGranite;    public static boolean registerCobblestone;    //Blocks    public static BlockMetaGold blockMetaGold;    public static BlockMetaIron blockMetaIron;    public static BlockMetaDiamond blockMetaDiamond;    public static BlockMetaEmerald blockMetaEmerald;    public static BlockMetaRedstone blockMetaRedstone;    public static BlockMetaLapis blockMetaLapis;    public static BlockMetaCoal blockMetaCoal;    public static BlockMetaAndesite blockMetaAndesite;    public static BlockMetaDiorite blockMetaDiorite;    public static BlockMetaGranite blockMetaGranite;    public static BlockMetaCobble blockMetaCobble;    public static BlockMetaQuartz blockMetaQuartz;    //ItemBlocks    public static ItemBlockMetaGold itemBlockMetaGold;    public static ItemBlockMetaIron itemBlockMetaIron;    public static ItemBlockMetaDiamond itemBlockMetaDiamond;    public static ItemBlockMetaEmerald itemBlockMetaEmerald;    public static ItemBlockMetaRedstone itemBlockMetaRedstone;    public static ItemBlockMetaLapis itemBlockMetaLapis;    public static ItemBlockMetaCoal itemBlockMetaCoal;    public static ItemBlockMetaAndesite itemBlockMetaAndesite;    public static ItemBlockMetaDiorite itemBlockMetaDiorite;    public static ItemBlockMetaGranite itemBlockMetaGranite;    public static ItemBlockMetaCobble itemBlockMetaCobble;    public static ItemBlockMetaQuartz itemBlockMetaQuartz;    public static void preInitCommon()    {        if(registerGold)        {            blockMetaGold = new BlockMetaGold();            itemBlockMetaGold = new ItemBlockMetaGold(blockMetaGold);            createRegistry(blockMetaGold,itemBlockMetaGold,"blockMetaGold");            GameRegistry.register(blockMetaGold);            GameRegistry.register(itemBlockMetaGold);            initOreDict(blockMetaGold,"blockGold");        }        if(registerIron)        {            blockMetaIron = new BlockMetaIron();            itemBlockMetaIron = new ItemBlockMetaIron(blockMetaIron);            createRegistry(blockMetaIron,itemBlockMetaIron,"blockMetaIron");            GameRegistry.register(blockMetaIron);            GameRegistry.register(itemBlockMetaIron);            initOreDict(blockMetaIron,"blockIron");        }        if(registerDiamond)        {            blockMetaDiamond = new BlockMetaDiamond();            itemBlockMetaDiamond = new ItemBlockMetaDiamond(blockMetaDiamond);            createRegistry(blockMetaDiamond,itemBlockMetaDiamond,"blockMetaDiamond");            GameRegistry.register(blockMetaDiamond);            GameRegistry.register(itemBlockMetaDiamond);            initOreDict(blockMetaDiamond,"blockDiamond");        }        if(registerEmerald)        {            blockMetaEmerald = new BlockMetaEmerald();            itemBlockMetaEmerald = new ItemBlockMetaEmerald(blockMetaEmerald);            createRegistry(blockMetaEmerald,itemBlockMetaEmerald,"blockMetaEmerald");            GameRegistry.register(blockMetaEmerald);            GameRegistry.register(itemBlockMetaEmerald);            initOreDict(blockMetaEmerald,"blockEmerald");        }        if(registerRedstone)        {            blockMetaRedstone = new BlockMetaRedstone();            itemBlockMetaRedstone = new ItemBlockMetaRedstone(blockMetaRedstone);            createRegistry(blockMetaRedstone,itemBlockMetaRedstone,"blockMetaRedstone");            GameRegistry.register(blockMetaRedstone);            GameRegistry.register(itemBlockMetaRedstone);            initOreDict(blockMetaRedstone,"blockRedstone");        }        if(registerLapis)        {            blockMetaLapis = new BlockMetaLapis();            itemBlockMetaLapis = new ItemBlockMetaLapis(blockMetaLapis);            createRegistry(blockMetaLapis,itemBlockMetaLapis,"blockMetaLapis");            GameRegistry.register(blockMetaLapis);            GameRegistry.register(itemBlockMetaLapis);            initOreDict(blockMetaLapis,"blockLapis");        }        if(registerCoal)        {            blockMetaCoal = new BlockMetaCoal();            itemBlockMetaCoal = new ItemBlockMetaCoal(blockMetaCoal);            createRegistry(blockMetaCoal,itemBlockMetaCoal,"blockMetaCoal");            GameRegistry.register(blockMetaCoal);            GameRegistry.register(itemBlockMetaCoal);            initOreDict(blockMetaCoal,"blockCoal");        }        if(registerAndesite)        {            blockMetaAndesite = new BlockMetaAndesite();            itemBlockMetaAndesite = new ItemBlockMetaAndesite(blockMetaAndesite);            createRegistry(blockMetaAndesite,itemBlockMetaAndesite,"blockMetaAndesite");            GameRegistry.register(blockMetaAndesite);            GameRegistry.register(itemBlockMetaAndesite);            initOreDict(blockMetaAndesite,"blockAndesite");        }        if(registerDiorite)        {            blockMetaDiorite = new BlockMetaDiorite();            itemBlockMetaDiorite = new ItemBlockMetaDiorite(blockMetaDiorite);            createRegistry(blockMetaDiorite,itemBlockMetaDiorite,"blockMetaDiorite");            GameRegistry.register(blockMetaDiorite);            GameRegistry.register(itemBlockMetaDiorite);            initOreDict(blockMetaDiorite,"blockDiorite");        }        if(registerGranite)        {            blockMetaGranite = new BlockMetaGranite();            itemBlockMetaGranite = new ItemBlockMetaGranite(blockMetaGranite);            createRegistry(blockMetaGranite,itemBlockMetaGranite,"blockMetaGranite");            GameRegistry.register(blockMetaGranite);            GameRegistry.register(itemBlockMetaGranite);            initOreDict(blockMetaGranite,"blockGranite");        }        if(registerCobblestone)        {            blockMetaCobble = new BlockMetaCobble();            itemBlockMetaCobble = new ItemBlockMetaCobble(blockMetaCobble);            createRegistry(blockMetaCobble,itemBlockMetaCobble,"blockMetaCobble");            GameRegistry.register(blockMetaCobble);            GameRegistry.register(itemBlockMetaCobble);            initOreDict(blockMetaCobble,"blockCobble");        }        if(registerQuartz)        {            blockMetaQuartz = new BlockMetaQuartz();            itemBlockMetaQuartz = new ItemBlockMetaQuartz(blockMetaQuartz);            createRegistry(blockMetaQuartz,itemBlockMetaQuartz,"blockMetaQuartz");            GameRegistry.register(blockMetaQuartz);            GameRegistry.register(itemBlockMetaQuartz);            initOreDict(blockMetaQuartz,"blockQuartz");        }    }    public static void preInitClient()    {        if(registerGold)        {            ResourceLocation location = new ResourceLocation("compressedores:blockMetaGold");            Item itemBlockMetaGold = Item.REGISTRY.getObject(location);            getModels(itemBlockMetaGold,location.toString());        }        if(registerIron)        {            ResourceLocation location = new ResourceLocation("compressedores:blockMetaIron");            Item itemBlockMetaIron = Item.REGISTRY.getObject(location);            getModels(itemBlockMetaIron,location.toString());        }        if(registerDiamond)        {            ResourceLocation location = new ResourceLocation("compressedores:blockMetaDiamond");            Item itemBlockMetaDiamond = Item.REGISTRY.getObject(location);            getModels(itemBlockMetaDiamond,location.toString());        }        if(registerEmerald)        {            ResourceLocation location = new ResourceLocation("compressedores:blockMetaEmerald");            Item itemBlockMetaEmerald = Item.REGISTRY.getObject(location);            getModels(itemBlockMetaEmerald,location.toString());        }        if(registerRedstone)        {            ResourceLocation location = new ResourceLocation("compressedores:blockMetaRedstone");            Item itemBlockMetaRedstone = Item.REGISTRY.getObject(location);            getModels(itemBlockMetaRedstone,location.toString());        }        if(registerLapis)        {            ResourceLocation location = new ResourceLocation("compressedores:blockMetaLapis");            Item itemBlockMetaLapis = Item.REGISTRY.getObject(location);            getModels(itemBlockMetaLapis,location.toString());        }        if(registerCoal)        {            ResourceLocation location = new ResourceLocation("compressedores:blockMetaCoal");            Item itemBlockMetaCoal = Item.REGISTRY.getObject(location);            getModels(itemBlockMetaCoal,location.toString());        }        if(registerAndesite)        {            ResourceLocation location = new ResourceLocation("compressedores:blockMetaAndesite");            Item itemBlockMetaAndesite = Item.REGISTRY.getObject(location);            getModels(itemBlockMetaAndesite,location.toString());        }        if(registerDiorite)        {            ResourceLocation location = new ResourceLocation("compressedores:blockMetaDiorite");            Item itemBlockMetaDiorite = Item.REGISTRY.getObject(location);            getModels(itemBlockMetaDiorite,location.toString());        }        if(registerGranite)        {            ResourceLocation location = new ResourceLocation("compressedores:blockMetaGranite");            Item itemBlockMetaGranite = Item.REGISTRY.getObject(location);            getModels(itemBlockMetaGranite,location.toString());        }        if(registerCobblestone)        {            ResourceLocation location = new ResourceLocation("compressedores:blockMetaCobble");            Item itemBlockMetaCobble = Item.REGISTRY.getObject(location);            getModels(itemBlockMetaCobble,location.toString());        }        if(registerQuartz)        {            ResourceLocation location = new ResourceLocation("compressedores:blockMetaQuartz");            Item itemBlockMetaQuartz = Item.REGISTRY.getObject(location);            getModels(itemBlockMetaQuartz, location.toString());        }    }    public static void initClient()    {        if(registerGold)        {            ResourceLocation location = new ResourceLocation("compressedores:blockMetaGold");            Item itemBlockMetaGold = Item.REGISTRY.getObject(location);            bakeModels(itemBlockMetaGold,location.toString());        }        if(registerIron)        {            ResourceLocation location = new ResourceLocation("compressedores:blockMetaIron");            Item itemBlockMetaIron = Item.REGISTRY.getObject(location);            bakeModels(itemBlockMetaIron,location.toString());        }        if(registerDiamond)        {            ResourceLocation location = new ResourceLocation("compressedores:blockMetaDiamond");            Item itemBlockMetaDiamond = Item.REGISTRY.getObject(location);            bakeModels(itemBlockMetaDiamond,location.toString());        }        if(registerEmerald)        {            ResourceLocation location = new ResourceLocation("compressedores:blockMetaEmerald");            Item itemBlockMetaEmerald = Item.REGISTRY.getObject(location);            bakeModels(itemBlockMetaEmerald,location.toString());        }        if(registerRedstone)        {            ResourceLocation location = new ResourceLocation("compressedores:blockMetaRedstone");            Item itemBlockMetaRedstone = Item.REGISTRY.getObject(location);            bakeModels(itemBlockMetaRedstone,location.toString());        }        if(registerLapis)        {            ResourceLocation location = new ResourceLocation("compressedores:blockMetaLapis");            Item itemBlockMetaLapis = Item.REGISTRY.getObject(location);            bakeModels(itemBlockMetaLapis,location.toString());        }        if(registerCoal)        {            ResourceLocation location = new ResourceLocation("compressedores:blockMetaCoal");            Item itemBlockMetaCoal = Item.REGISTRY.getObject(location);            bakeModels(itemBlockMetaCoal,location.toString());        }        if(registerAndesite)        {            ResourceLocation location = new ResourceLocation("compressedores:blockMetaAndesite");            Item itemBlockMetaAndesite = Item.REGISTRY.getObject(location);            bakeModels(itemBlockMetaAndesite,location.toString());        }        if(registerDiorite)        {            ResourceLocation location = new ResourceLocation("compressedores:blockMetaDiorite");            Item itemBlockMetaDiorite = Item.REGISTRY.getObject(location);            bakeModels(itemBlockMetaDiorite,location.toString());        }        if(registerGranite)        {            ResourceLocation location = new ResourceLocation("compressedores:blockMetaGranite");            Item itemBlockMetaGranite = Item.REGISTRY.getObject(location);            bakeModels(itemBlockMetaGranite,location.toString());        }        if(registerCobblestone)        {            ResourceLocation location = new ResourceLocation("compressedores:blockMetaCobble");            Item itemBlockMetaCobble = Item.REGISTRY.getObject(location);            bakeModels(itemBlockMetaCobble,location.toString());        }        if(registerQuartz)        {            ResourceLocation location = new ResourceLocation("compressedores:blockMetaQuartz");            Item itemBlockMetaQuartz = Item.REGISTRY.getObject(location);            bakeModels(itemBlockMetaQuartz,location.toString());        }    }    public static void initOreDict(Block blockIn, String name)    {        for(int i = 0; i < 8; i++)        {            ItemStack stack = new ItemStack(blockIn,1,i);            OreDictionary.registerOre(name + EnumLevel.byMetadata(i).getUnlocalizedName(),stack);        }    }    public static void createRegistry(Block block,ItemBlock itemBlock, String name)    {        block.setRegistryName(ModInfo.MOD_ID.toLowerCase(),name);        createRegistry(itemBlock,block.getRegistryName());    }    public static void createRegistry(ItemBlock itemBlock, ResourceLocation location)    {        itemBlock.setRegistryName(location);    }    public static void getModels(Item item, String resource)    {        ModelResourceLocation location;        for (int i = 0; i < 8; i++)        {            location = new ModelResourceLocation(resource + "." + EnumLevel.byMetadata(i).getUnlocalizedName(),"inventory");            ModelBakery.registerItemVariants(item,location);        }    }    public static void bakeModels(Item item, String resource)    {        ModelResourceLocation location;        for(int i = 0; i < 8; i++)        {            location = new ModelResourceLocation(resource + "." + EnumLevel.byMetadata(i).getUnlocalizedName(),"inventory");            Minecraft.getMinecraft().getRenderItem().getItemModelMesher().register(item,i,location);        }    }}